# Generated by Django 3.2.18 on 2023-04-11 13:51

from django.db import migrations, models
import functools
import openforms.emails.validators
import openforms.registrations.contrib.email.models
import openforms.template.validators
import tinymce.models


class Migration(migrations.Migration):

    dependencies = [
        ("registrations_email", "0001_initial"),
    ]

    operations = [
        migrations.AddField(
            model_name="emailconfig",
            name="content_html",
            field=tinymce.models.HTMLField(
                default=functools.partial(
                    openforms.registrations.contrib.email.models.render_with_language,
                    *("registrations/contrib/email/email_registration_content.html",),
                    **{}
                ),
                help_text="Content of the registration email message (as HTML). Can be overridden on the form level.",
                validators=[
                    openforms.template.validators.DjangoTemplateValidator(
                        backend="openforms.template.openforms_backend"
                    ),
                    openforms.emails.validators.URLSanitationValidator(),
                ],
                verbose_name="content HTML",
            ),
        ),
        migrations.AddField(
            model_name="emailconfig",
            name="content_text",
            field=models.TextField(
                default=functools.partial(
                    openforms.registrations.contrib.email.models.render_with_language,
                    *("registrations/contrib/email/email_registration_content.txt",),
                    **{}
                ),
                help_text="Content of the registration email message (as text). Can be overridden on the form level.",
                validators=[
                    openforms.template.validators.DjangoTemplateValidator(
                        backend="openforms.template.openforms_backend"
                    ),
                    openforms.emails.validators.URLSanitationValidator(),
                ],
                verbose_name="content text",
            ),
        ),
        migrations.AddField(
            model_name="emailconfig",
            name="payment_subject",
            field=models.CharField(
                default=functools.partial(
                    openforms.registrations.contrib.email.models.render_with_language,
                    *(
                        "registrations/contrib/email/email_registration_subject_payment.txt",
                    ),
                    **{}
                ),
                help_text="Subject of the registration email message that is sent when the payment is received. Can be overridden on the form level.",
                max_length=1000,
                validators=[openforms.template.validators.DjangoTemplateValidator()],
                verbose_name="payment subject",
            ),
        ),
        migrations.AddField(
            model_name="emailconfig",
            name="subject",
            field=models.CharField(
                default=functools.partial(
                    openforms.registrations.contrib.email.models.render_with_language,
                    *("registrations/contrib/email/email_registration_subject.txt",),
                    **{}
                ),
                help_text="Subject of the registration email message. Can be overridden on the form level.",
                max_length=1000,
                validators=[openforms.template.validators.DjangoTemplateValidator()],
                verbose_name="subject",
            ),
        ),
    ]
