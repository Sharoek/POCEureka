# SPDX-License-Identifier: EUPL-1.2
# Copyright (C) 2022 Dimpact
# Generated by Django 3.2.16 on 2022-12-14 13:38

import django.db.models.deletion
from django.db import migrations, models

import openzaak.utils.fields


class Migration(migrations.Migration):

    dependencies = [
        ("zaken", "0020_auto_20221214_1259"),
    ]

    # ALTER table operations result in table locks
    operations = [
        migrations.AlterField(
            model_name="klantcontact",
            name="zaak",
            field=models.ForeignKey(
                help_text="URL-referentie naar de ZAAK.",
                on_delete=django.db.models.deletion.CASCADE,
                to="zaken.zaak",
            ),
        ),
        migrations.AlterField(
            model_name="relevantezaakrelatie",
            name="_relevant_zaak",
            field=models.ForeignKey(
                blank=True,
                help_text="URL-referentie naar de ZAAK.",
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="zaken.zaak",
                verbose_name="relevante zaak",
            ),
        ),
        migrations.AlterField(
            model_name="relevantezaakrelatie",
            name="zaak",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="relevante_andere_zaken",
                to="zaken.zaak",
            ),
        ),
        migrations.AlterField(
            model_name="resultaat",
            name="zaak",
            field=models.OneToOneField(
                help_text="URL-referentie naar de ZAAK.",
                on_delete=django.db.models.deletion.CASCADE,
                to="zaken.zaak",
            ),
        ),
        migrations.AlterField(
            model_name="rol",
            name="zaak",
            field=models.ForeignKey(
                help_text="URL-referentie naar de ZAAK.",
                on_delete=django.db.models.deletion.CASCADE,
                to="zaken.zaak",
            ),
        ),
        migrations.AlterField(
            model_name="status",
            name="zaak",
            field=models.ForeignKey(
                help_text="URL-referentie naar de ZAAK.",
                on_delete=django.db.models.deletion.CASCADE,
                to="zaken.zaak",
            ),
        ),
        migrations.AlterField(
            model_name="zaak",
            name="hoofdzaak",
            field=models.ForeignKey(
                blank=True,
                help_text="URL-referentie naar de ZAAK, waarom verzocht is door de initiator daarvan, die behandeld wordt in twee of meer separate ZAAKen waarvan de onderhavige ZAAK er één is.",
                limit_choices_to={"hoofdzaak__isnull": True},
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="deelzaken",
                to="zaken.zaak",
                verbose_name="is deelzaak van",
            ),
        ),
        migrations.AlterField(
            model_name="zaakbesluit",
            name="zaak",
            field=models.ForeignKey(
                help_text="URL-referentie naar de ZAAK.",
                on_delete=django.db.models.deletion.CASCADE,
                to="zaken.zaak",
            ),
        ),
        migrations.AlterField(
            model_name="zaakcontactmoment",
            name="zaak",
            field=models.ForeignKey(
                help_text="URL-referentie naar de ZAAK.",
                on_delete=django.db.models.deletion.CASCADE,
                to="zaken.zaak",
            ),
        ),
        migrations.AlterField(
            model_name="zaakeigenschap",
            name="zaak",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="zaken.zaak"
            ),
        ),
        migrations.AlterField(
            model_name="zaakinformatieobject",
            name="zaak",
            field=models.ForeignKey(
                help_text="URL-referentie naar de ZAAK.",
                on_delete=django.db.models.deletion.CASCADE,
                to="zaken.zaak",
            ),
        ),
        migrations.AlterField(
            model_name="zaakkenmerk",
            name="zaak",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="zaken.zaak"
            ),
        ),
        migrations.AlterField(
            model_name="zaakobject",
            name="zaak",
            field=models.ForeignKey(
                help_text="URL-referentie naar de ZAAK.",
                on_delete=django.db.models.deletion.CASCADE,
                to="zaken.zaak",
            ),
        ),
        migrations.AlterField(
            model_name="zaakverzoek",
            name="zaak",
            field=models.ForeignKey(
                help_text="URL-referentie naar de ZAAK.",
                on_delete=django.db.models.deletion.CASCADE,
                to="zaken.zaak",
            ),
        ),
        migrations.SeparateDatabaseAndState(
            database_operations=[],
            state_operations=[
                migrations.AddField(
                    model_name="relevantezaakrelatie",
                    name="url",
                    field=openzaak.utils.fields.FkOrServiceUrlField(
                        blank=False,
                        fk_field="_relevant_zaak",
                        null=False,
                        url_field="_relevant_zaak_url",
                    ),
                    preserve_default=False,
                ),
                migrations.AddConstraint(
                    model_name="relevantezaakrelatie",
                    constraint=models.CheckConstraint(
                        check=models.Q(
                            models.Q(
                                models.Q(
                                    ("_relevant_zaak__isnull", True), _negated=True
                                ),
                                ("_relevant_zaak_base_url__isnull", True),
                            ),
                            models.Q(
                                ("_relevant_zaak__isnull", True),
                                models.Q(
                                    ("_relevant_zaak_base_url__isnull", True),
                                    _negated=True,
                                ),
                            ),
                            _connector="OR",
                        ),
                        name="zaken_relevantezaakrelatie__relevant_zaak_or__relevant_zaak_base_url_filled",
                    ),
                ),
            ],
        ),
    ]
