# SPDX-License-Identifier: EUPL-1.2
# Copyright (C) 2024 Dimpact
# Generated by Django 4.2.11 on 2024-04-23 10:50

from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("zaken", "0032_alter_adres_identificatie"),
    ]

    operations = [
        migrations.RemoveConstraint(
            model_name="relevantezaakrelatie",
            name="zaken_relevantezaakrelatie__relevant_zaak_base_url_and__relevant_zaak_relative_url_filled",
        ),
        migrations.RemoveConstraint(
            model_name="resultaat",
            name="zaken_resultaat__resultaattype_base_url_and__resultaattype_relative_url_filled",
        ),
        migrations.RemoveConstraint(
            model_name="rol",
            name="zaken_rol__roltype_base_url_and__roltype_relative_url_filled",
        ),
        migrations.RemoveConstraint(
            model_name="status",
            name="zaken_status__statustype_base_url_and__statustype_relative_url_filled",
        ),
        migrations.RemoveConstraint(
            model_name="zaak",
            name="zaken_zaak__zaaktype_base_url_and__zaaktype_relative_url_filled",
        ),
        migrations.RemoveConstraint(
            model_name="zaakbesluit",
            name="zaken_zaakbesluit__besluit_base_url_and__besluit_relative_url_filled",
        ),
        migrations.RemoveConstraint(
            model_name="zaakeigenschap",
            name="zaken_zaakeigenschap__eigenschap_base_url_and__eigenschap_relative_url_filled",
        ),
        migrations.RemoveConstraint(
            model_name="zaakinformatieobject",
            name="zaken_zaakinformatieobject__informatieobject_base_url_and__informatieobject_relative_url_filled",
        ),
        migrations.RemoveConstraint(
            model_name="zaakobject",
            name="zaken_zaakobject__zaakobjecttype_base_url_and__zaakobjecttype_relative_url_filled",
        ),
        migrations.AddConstraint(
            model_name="relevantezaakrelatie",
            constraint=models.CheckConstraint(
                check=models.Q(
                    models.Q(
                        ("_relevant_zaak_base_url__isnull", True),
                        models.Q(
                            ("_relevant_zaak_relative_url__isnull", True),
                            ("_relevant_zaak_relative_url", ""),
                            _connector="OR",
                        ),
                    ),
                    models.Q(
                        models.Q(
                            ("_relevant_zaak_base_url__isnull", True), _negated=True
                        ),
                        models.Q(
                            ("_relevant_zaak_relative_url__isnull", True),
                            ("_relevant_zaak_relative_url", ""),
                            _connector="OR",
                            _negated=True,
                        ),
                    ),
                    _connector="OR",
                ),
                name="zaken_relevantezaakrelatie__relevant_zaak_base_url_and__relevant_zaak_relative_url_filled",
            ),
        ),
        migrations.AddConstraint(
            model_name="resultaat",
            constraint=models.CheckConstraint(
                check=models.Q(
                    models.Q(
                        ("_resultaattype_base_url__isnull", True),
                        models.Q(
                            ("_resultaattype_relative_url__isnull", True),
                            ("_resultaattype_relative_url", ""),
                            _connector="OR",
                        ),
                    ),
                    models.Q(
                        models.Q(
                            ("_resultaattype_base_url__isnull", True), _negated=True
                        ),
                        models.Q(
                            ("_resultaattype_relative_url__isnull", True),
                            ("_resultaattype_relative_url", ""),
                            _connector="OR",
                            _negated=True,
                        ),
                    ),
                    _connector="OR",
                ),
                name="zaken_resultaat__resultaattype_base_url_and__resultaattype_relative_url_filled",
            ),
        ),
        migrations.AddConstraint(
            model_name="rol",
            constraint=models.CheckConstraint(
                check=models.Q(
                    models.Q(
                        ("_roltype_base_url__isnull", True),
                        models.Q(
                            ("_roltype_relative_url__isnull", True),
                            ("_roltype_relative_url", ""),
                            _connector="OR",
                        ),
                    ),
                    models.Q(
                        models.Q(("_roltype_base_url__isnull", True), _negated=True),
                        models.Q(
                            ("_roltype_relative_url__isnull", True),
                            ("_roltype_relative_url", ""),
                            _connector="OR",
                            _negated=True,
                        ),
                    ),
                    _connector="OR",
                ),
                name="zaken_rol__roltype_base_url_and__roltype_relative_url_filled",
            ),
        ),
        migrations.AddConstraint(
            model_name="status",
            constraint=models.CheckConstraint(
                check=models.Q(
                    models.Q(
                        ("_statustype_base_url__isnull", True),
                        models.Q(
                            ("_statustype_relative_url__isnull", True),
                            ("_statustype_relative_url", ""),
                            _connector="OR",
                        ),
                    ),
                    models.Q(
                        models.Q(("_statustype_base_url__isnull", True), _negated=True),
                        models.Q(
                            ("_statustype_relative_url__isnull", True),
                            ("_statustype_relative_url", ""),
                            _connector="OR",
                            _negated=True,
                        ),
                    ),
                    _connector="OR",
                ),
                name="zaken_status__statustype_base_url_and__statustype_relative_url_filled",
            ),
        ),
        migrations.AddConstraint(
            model_name="zaak",
            constraint=models.CheckConstraint(
                check=models.Q(
                    models.Q(
                        ("_zaaktype_base_url__isnull", True),
                        models.Q(
                            ("_zaaktype_relative_url__isnull", True),
                            ("_zaaktype_relative_url", ""),
                            _connector="OR",
                        ),
                    ),
                    models.Q(
                        models.Q(("_zaaktype_base_url__isnull", True), _negated=True),
                        models.Q(
                            ("_zaaktype_relative_url__isnull", True),
                            ("_zaaktype_relative_url", ""),
                            _connector="OR",
                            _negated=True,
                        ),
                    ),
                    _connector="OR",
                ),
                name="zaken_zaak__zaaktype_base_url_and__zaaktype_relative_url_filled",
            ),
        ),
        migrations.AddConstraint(
            model_name="zaakbesluit",
            constraint=models.CheckConstraint(
                check=models.Q(
                    models.Q(
                        ("_besluit_base_url__isnull", True),
                        models.Q(
                            ("_besluit_relative_url__isnull", True),
                            ("_besluit_relative_url", ""),
                            _connector="OR",
                        ),
                    ),
                    models.Q(
                        models.Q(("_besluit_base_url__isnull", True), _negated=True),
                        models.Q(
                            ("_besluit_relative_url__isnull", True),
                            ("_besluit_relative_url", ""),
                            _connector="OR",
                            _negated=True,
                        ),
                    ),
                    _connector="OR",
                ),
                name="zaken_zaakbesluit__besluit_base_url_and__besluit_relative_url_filled",
            ),
        ),
        migrations.AddConstraint(
            model_name="zaakeigenschap",
            constraint=models.CheckConstraint(
                check=models.Q(
                    models.Q(
                        ("_eigenschap_base_url__isnull", True),
                        models.Q(
                            ("_eigenschap_relative_url__isnull", True),
                            ("_eigenschap_relative_url", ""),
                            _connector="OR",
                        ),
                    ),
                    models.Q(
                        models.Q(("_eigenschap_base_url__isnull", True), _negated=True),
                        models.Q(
                            ("_eigenschap_relative_url__isnull", True),
                            ("_eigenschap_relative_url", ""),
                            _connector="OR",
                            _negated=True,
                        ),
                    ),
                    _connector="OR",
                ),
                name="zaken_zaakeigenschap__eigenschap_base_url_and__eigenschap_relative_url_filled",
            ),
        ),
        migrations.AddConstraint(
            model_name="zaakinformatieobject",
            constraint=models.CheckConstraint(
                check=models.Q(
                    models.Q(
                        ("_informatieobject_base_url__isnull", True),
                        models.Q(
                            ("_informatieobject_relative_url__isnull", True),
                            ("_informatieobject_relative_url", ""),
                            _connector="OR",
                        ),
                    ),
                    models.Q(
                        models.Q(
                            ("_informatieobject_base_url__isnull", True), _negated=True
                        ),
                        models.Q(
                            ("_informatieobject_relative_url__isnull", True),
                            ("_informatieobject_relative_url", ""),
                            _connector="OR",
                            _negated=True,
                        ),
                    ),
                    _connector="OR",
                ),
                name="zaken_zaakinformatieobject__informatieobject_base_url_and__informatieobject_relative_url_filled",
            ),
        ),
        migrations.AddConstraint(
            model_name="zaakobject",
            constraint=models.CheckConstraint(
                check=models.Q(
                    models.Q(
                        ("_zaakobjecttype_base_url__isnull", True),
                        models.Q(
                            ("_zaakobjecttype_relative_url__isnull", True),
                            ("_zaakobjecttype_relative_url", ""),
                            _connector="OR",
                        ),
                    ),
                    models.Q(
                        models.Q(
                            ("_zaakobjecttype_base_url__isnull", True), _negated=True
                        ),
                        models.Q(
                            ("_zaakobjecttype_relative_url__isnull", True),
                            ("_zaakobjecttype_relative_url", ""),
                            _connector="OR",
                            _negated=True,
                        ),
                    ),
                    _connector="OR",
                ),
                name="zaken_zaakobject__zaakobjecttype_base_url_and__zaakobjecttype_relative_url_filled",
            ),
        ),
    ]
