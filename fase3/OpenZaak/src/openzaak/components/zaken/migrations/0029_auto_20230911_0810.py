# SPDX-License-Identifier: EUPL-1.2
# Copyright (C) 2023 Dimpact
# Generated by Django 3.2.18 on 2023-09-11 08:10

from django.db import migrations, models
import django.db.models.deletion
import openzaak.utils.fields
import zgw_consumers.models.fields


class Migration(migrations.Migration):

    dependencies = [
        ("zgw_consumers", "0016_auto_20220818_1412"),
        ("catalogi", "0015_auto_20230908_1438"),
        ("zaken", "0028_alter_spoorbaandeel_type"),
    ]

    operations = [
        migrations.AddField(
            model_name="zaakobject",
            name="_zaakobjecttype",
            field=models.ForeignKey(
                blank=True,
                help_text="URL-referentie naar het ZAAKOBJECTTYPE (in de lokale Catalogi API).",
                null=True,
                on_delete=django.db.models.deletion.PROTECT,
                to="catalogi.zaakobjecttype",
            ),
        ),
        migrations.AddField(
            model_name="zaakobject",
            name="_zaakobjecttype_base_url",
            field=openzaak.utils.fields.ServiceFkField(
                blank=True,
                help_text="Basis deel van URL-referentie naar extern ZAAKOBJECTTYPE (in een andere Catalogi API).",
                null=True,
                on_delete=django.db.models.deletion.PROTECT,
                related_name="+",
                to="zgw_consumers.service",
            ),
        ),
        migrations.AddField(
            model_name="zaakobject",
            name="_zaakobjecttype_relative_url",
            field=openzaak.utils.fields.RelativeURLField(
                blank=True,
                help_text="Relatief deel van URL-referentie naar extern ZAAKOBJECTTYPE (in een andere Catalogi API).",
                max_length=1000,
                null=True,
                verbose_name="zaakobjecttype relative url",
            ),
        ),
        migrations.AddField(
            model_name="zaakobject",
            name="_zaakobjecttype_url",
            field=zgw_consumers.models.fields.ServiceUrlField(
                base_field="_zaakobjecttype_base_url",
                blank=True,
                null=True,
                relative_field="_zaakobjecttype_relative_url",
            ),
        ),
        migrations.AddField(
            model_name="zaakobject",
            name="zaakobjecttype",
            field=openzaak.utils.fields.FkOrServiceUrlField(
                blank=True,
                fk_field="_zaakobjecttype",
                null=True,
                url_field="_zaakobjecttype_url",
            ),
        ),
        migrations.AddConstraint(
            model_name="zaakobject",
            constraint=models.CheckConstraint(
                check=models.Q(
                    models.Q(
                        ("_zaakobjecttype_base_url__isnull", True),
                        models.Q(
                            ("_zaakobjecttype_relative_url__isnull", True),
                            ("_zaakobjecttype_relative_url", ""),
                            _connector="OR",
                        ),
                    ),
                    models.Q(
                        models.Q(
                            ("_zaakobjecttype_base_url__isnull", True), _negated=True
                        ),
                        models.Q(
                            models.Q(
                                ("_zaakobjecttype_relative_url__isnull", True),
                                ("_zaakobjecttype_relative_url", ""),
                                _connector="OR",
                            ),
                            _negated=True,
                        ),
                    ),
                    _connector="OR",
                ),
                name="zaken_zaakobject__zaakobjecttype_base_url_and__zaakobjecttype_relative_url_filled",
            ),
        ),
    ]
