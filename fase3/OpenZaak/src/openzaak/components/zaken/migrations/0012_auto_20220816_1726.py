# SPDX-License-Identifier: EUPL-1.2
# Copyright (C) 2022 Dimpact
# Generated by Django 3.2.14 on 2022-08-16 17:26

from django.db import migrations, models
import openzaak.utils.fields
import zgw_consumers.models.fields


class Migration(migrations.Migration):

    dependencies = [
        ("zaken", "0011_fill_service_urls"),
    ]

    operations = [
        migrations.RemoveConstraint(
            model_name="relevantezaakrelatie",
            name="zaken_relevantezaakrelatie__relevant_zaak_or__relevant_zaak_url_filled",
        ),
        migrations.RemoveConstraint(
            model_name="resultaat",
            name="zaken_resultaat__resultaattype_or__resultaattype_url_filled",
        ),
        migrations.RemoveConstraint(
            model_name="rol",
            name="zaken_rol__roltype_or__roltype_url_filled",
        ),
        migrations.RemoveConstraint(
            model_name="status",
            name="zaken_status__statustype_or__statustype_url_filled",
        ),
        migrations.RemoveConstraint(
            model_name="zaak",
            name="zaken_zaak__zaaktype_or__zaaktype_url_filled",
        ),
        migrations.RemoveConstraint(
            model_name="zaakbesluit",
            name="zaken_zaakbesluit__besluit_or__besluit_url_filled",
        ),
        migrations.RemoveConstraint(
            model_name="zaakeigenschap",
            name="zaken_zaakeigenschap__eigenschap_or__eigenschap_url_filled",
        ),
        migrations.RemoveConstraint(
            model_name="zaakinformatieobject",
            name="unique_zaak_and_external_document",
        ),
        migrations.RemoveConstraint(
            model_name="zaakinformatieobject",
            name="zaken_zaakinformatieobject__informatieobject_or__informatieobject_url_filled",
        ),
        migrations.RemoveConstraint(
            model_name="zaakbesluit",
            name="unique_zaak_and_besluit",
        ),
        migrations.RemoveField(
            model_name="relevantezaakrelatie",
            name="_relevant_zaak_url",
        ),
        migrations.RemoveField(
            model_name="resultaat",
            name="_resultaattype_url",
        ),
        migrations.RemoveField(
            model_name="rol",
            name="_roltype_url",
        ),
        migrations.RemoveField(
            model_name="status",
            name="_statustype_url",
        ),
        migrations.RemoveField(
            model_name="zaak",
            name="_zaaktype_url",
        ),
        migrations.RemoveField(
            model_name="zaakbesluit",
            name="_besluit_url",
        ),
        migrations.RemoveField(
            model_name="zaakeigenschap",
            name="_eigenschap_url",
        ),
        migrations.RemoveField(
            model_name="zaakinformatieobject",
            name="_informatieobject_url",
        ),
        migrations.AddConstraint(
            model_name="relevantezaakrelatie",
            constraint=models.CheckConstraint(
                check=models.Q(
                    models.Q(
                        models.Q(("_relevant_zaak__isnull", True), _negated=True),
                        ("_relevant_zaak_base_url__isnull", True),
                    ),
                    models.Q(
                        ("_relevant_zaak__isnull", True),
                        models.Q(
                            ("_relevant_zaak_base_url__isnull", True), _negated=True
                        ),
                    ),
                    _connector="OR",
                ),
                name="zaken_relevantezaakrelatie__relevant_zaak_or__relevant_zaak_base_url_filled",
            ),
        ),
        migrations.AddConstraint(
            model_name="resultaat",
            constraint=models.CheckConstraint(
                check=models.Q(
                    models.Q(
                        models.Q(("_resultaattype__isnull", True), _negated=True),
                        ("_resultaattype_base_url__isnull", True),
                    ),
                    models.Q(
                        ("_resultaattype__isnull", True),
                        models.Q(
                            ("_resultaattype_base_url__isnull", True), _negated=True
                        ),
                    ),
                    _connector="OR",
                ),
                name="zaken_resultaat__resultaattype_or__resultaattype_base_url_filled",
            ),
        ),
        migrations.AddConstraint(
            model_name="rol",
            constraint=models.CheckConstraint(
                check=models.Q(
                    models.Q(
                        models.Q(("_roltype__isnull", True), _negated=True),
                        ("_roltype_base_url__isnull", True),
                    ),
                    models.Q(
                        ("_roltype__isnull", True),
                        models.Q(("_roltype_base_url__isnull", True), _negated=True),
                    ),
                    _connector="OR",
                ),
                name="zaken_rol__roltype_or__roltype_base_url_filled",
            ),
        ),
        migrations.AddConstraint(
            model_name="status",
            constraint=models.CheckConstraint(
                check=models.Q(
                    models.Q(
                        models.Q(("_statustype__isnull", True), _negated=True),
                        ("_statustype_base_url__isnull", True),
                    ),
                    models.Q(
                        ("_statustype__isnull", True),
                        models.Q(("_statustype_base_url__isnull", True), _negated=True),
                    ),
                    _connector="OR",
                ),
                name="zaken_status__statustype_or__statustype_base_url_filled",
            ),
        ),
        migrations.AddConstraint(
            model_name="zaak",
            constraint=models.CheckConstraint(
                check=models.Q(
                    models.Q(
                        models.Q(("_zaaktype__isnull", True), _negated=True),
                        ("_zaaktype_base_url__isnull", True),
                    ),
                    models.Q(
                        ("_zaaktype__isnull", True),
                        models.Q(("_zaaktype_base_url__isnull", True), _negated=True),
                    ),
                    _connector="OR",
                ),
                name="zaken_zaak__zaaktype_or__zaaktype_base_url_filled",
            ),
        ),
        migrations.AddConstraint(
            model_name="zaakbesluit",
            constraint=models.CheckConstraint(
                check=models.Q(
                    models.Q(
                        models.Q(("_besluit__isnull", True), _negated=True),
                        ("_besluit_base_url__isnull", True),
                    ),
                    models.Q(
                        ("_besluit__isnull", True),
                        models.Q(("_besluit_base_url__isnull", True), _negated=True),
                    ),
                    _connector="OR",
                ),
                name="zaken_zaakbesluit__besluit_or__besluit_base_url_filled",
            ),
        ),
        migrations.AddConstraint(
            model_name="zaakeigenschap",
            constraint=models.CheckConstraint(
                check=models.Q(
                    models.Q(
                        models.Q(("_eigenschap__isnull", True), _negated=True),
                        ("_eigenschap_base_url__isnull", True),
                    ),
                    models.Q(
                        ("_eigenschap__isnull", True),
                        models.Q(("_eigenschap_base_url__isnull", True), _negated=True),
                    ),
                    _connector="OR",
                ),
                name="zaken_zaakeigenschap__eigenschap_or__eigenschap_base_url_filled",
            ),
        ),
        migrations.AddConstraint(
            model_name="zaakinformatieobject",
            constraint=models.UniqueConstraint(
                condition=models.Q(
                    ("_informatieobject_relative_url__isnull", True), _negated=True
                ),
                fields=(
                    "zaak",
                    "_informatieobject_base_url",
                    "_informatieobject_relative_url",
                ),
                name="unique_zaak_and_external_document",
            ),
        ),
        migrations.AddConstraint(
            model_name="zaakinformatieobject",
            constraint=models.CheckConstraint(
                check=models.Q(
                    models.Q(
                        models.Q(("_informatieobject__isnull", True), _negated=True),
                        ("_informatieobject_base_url__isnull", True),
                    ),
                    models.Q(
                        ("_informatieobject__isnull", True),
                        models.Q(
                            ("_informatieobject_base_url__isnull", True), _negated=True
                        ),
                    ),
                    _connector="OR",
                ),
                name="zaken_zaakinformatieobject__informatieobject_or__informatieobject_base_url_filled",
            ),
        ),
        migrations.AddConstraint(
            model_name="zaakbesluit",
            constraint=models.UniqueConstraint(
                condition=models.Q(("_besluit_base_url__isnull", False)),
                fields=("zaak", "_besluit_base_url", "_besluit_relative_url"),
                name="unique_zaak_and_besluit",
            ),
        ),
    ]
